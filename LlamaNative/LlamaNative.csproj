<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Configurations>Debug-Cuda;Release;Debug-Cpu</Configurations>
	</PropertyGroup>
	<PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
		<DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug-Cuda|AnyCPU'">
		<CopyCUDAFiles>true</CopyCUDAFiles>
		<DebugType>full</DebugType>
		<DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
		<Optimize>false</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug-Cpu|AnyCPU'">
		<CopyCpuFiles>true</CopyCpuFiles>
		<DebugType>full</DebugType>
		<DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
		<Optimize>false</Optimize>
	</PropertyGroup>
	<ItemGroup Condition="'$(CopyCUDAFiles)' == 'true'">
		<Content Include="Binaries\CUDA\llama.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.dll</TargetPath>
		</Content>
		<Content Include="Binaries\CUDA\llama.ilk">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.ilk</TargetPath>
		</Content>
		<Content Include="Binaries\CUDA\llama.pdb">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.pdb</TargetPath>
		</Content>
		<Content Include="Binaries\CUDA\ggml.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.dll</TargetPath>
		</Content>
		<Content Include="Binaries\CUDA\ggml.ilk">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.ilk</TargetPath>
		</Content>
		<Content Include="Binaries\CUDA\ggml.pdb">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.pdb</TargetPath>
		</Content>
	</ItemGroup>
	<ItemGroup Condition="'$(CopyCpuFiles)' == 'true'">
		<Content Include="Binaries\Cpu\llama.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.dll</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\libllama.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libllama.so</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\llama.ilk">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.ilk</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\llama.pdb">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>llama.pdb</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\ggml.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.dll</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\libggml.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>libggml.so</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\ggml.ilk">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.ilk</TargetPath>
		</Content>
		<Content Include="Binaries\Cpu\ggml.pdb">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>ggml.pdb</TargetPath>
		</Content>
	</ItemGroup>
	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
		<Exec Condition="'$(OS)' == 'Windows_NT'" Command="powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;Get-ChildItem -Path '$(ProjectDir)' -Filter '*.zip' -Recurse | ForEach-Object { Expand-Archive -Path $_.FullName -DestinationPath $_.DirectoryName -Force }&quot;" />
		<Exec Condition="'$(OS)' != 'Windows_NT'" Command="find '$(ProjectDir)' -name '*.zip' -execdir unzip -o {} \;" />
	</Target>
	<ItemGroup>
	  <None Remove="Binaries\CUDA\llama.dll.zip" />
	  <None Remove="Binaries\CUDA\llama.ilk.zip" />
	  <None Remove="Binaries\CUDA\llama.pdb.zip" />
	</ItemGroup>
</Project>
